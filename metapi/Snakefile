#!/usr/bin/env snakemake
from metasample import *
from metareport import flagstats_summary

shell.executable("bash")

configfile: "metaconfig.yaml"

_samples = parse_samples(config["params"]["samples"])

_samples_id = []

if config["params"]["cobinning"]["do"]:
    _samples_id = parse_cobin_samples_id(config["params"]["cobinning"]["samples_id"])
    if config["params"]["cobinning"]["rename"]:
        _samples["id_2"] = ["S" + str(i + 1) for i in range(len(_samples))]
        _samples.loc[:, ["id", "id_2"]].to_csv(config["params"]["rename_id"], sep='\t', index=False)

include: "rules/step.smk"

if config["params"]["simulation"]["do"]:
    include: "rules/simulation.smk"

if config["params"]["begin"] == "raw":
    include: "rules/fastqc.smk"
    include: "rules/trimming.smk"
    include: "rules/rmhost.smk"

include: "rules/assembly.smk"
include: "rules/coassembly.smk"
include: "rules/metaquast.smk"
include: "rules/prediction.smk"
include: "rules/alignment.smk"
include: "rules/binning.smk"
include: "rules/cobinning.smk"
include: "rules/checkm.smk"
include: "rules/annotation.smk"
include: "rules/profilling.smk"
include: "rules/burst.smk"


'''
include: "rules/dereplication.smk"
include: "rules/classification.smk"
'''

rule all:
    input:
        burst_target
